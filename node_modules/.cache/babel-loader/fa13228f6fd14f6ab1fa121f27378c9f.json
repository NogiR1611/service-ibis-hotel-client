{"ast":null,"code":"var _jsxFileName = \"F:\\\\Matkul\\\\Kuliah Praktek\\\\Client\\\\src\\\\tempat_wisata\\\\List_Tempat_Wisata.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../Components/Header\";\nimport ListPage from \"../Components/ListPage\";\nimport Footer from \"../Components/Footer\";\nimport Deskripsi from \"../Components/Deskripsi\";\nimport axios from \"axios\";\n\nclass ListWisata extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchListWisata = () => {\n      /*\r\n      const {page, pageSize} = this.state;\r\n      const params = this.getRequestParams(page, pageSize);\r\n      */\n      axios.get('http://localhost:8000/wisata/pagination?page=' + this.state.activePage).then(response => {\n        const {\n          data,\n          current_page,\n          per_page,\n          total\n        } = response.data;\n        this.setState({\n          Items: data,\n          activePage: current_page,\n          itemsCountPerPage: per_page,\n          totalItemsCount: total\n        });\n\n        if (data === null) {\n          this.setState({\n            isNull: true\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handlePageChange = pageNumber => {\n      axios.get('http://localhost:8000/wisata/pagination?page=' + pageNumber).then(res => {\n        const {\n          data,\n          current_page\n        } = res.data;\n        this.setState({\n          Items: data,\n          activePage: current_page\n        });\n      });\n    };\n\n    this.state = {\n      Items: [],\n      isNull: false,\n      description: \"\",\n      activePage: 0,\n      itemCountPerPage: 0,\n      totalItemsCount: 0,\n      pageRangeDisplayed: 5,\n      Description: \"\"\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.fetchListWisata();\n  }\n  /*\r\n  getRequestParams = (page,pageSize) =>{\r\n      let params = {};\r\n        if(page){\r\n          params[\"page\"] = page - 1;\r\n      }\r\n      if(pageSize){\r\n          params[\"pageSize\"] = pageSize;\r\n      }\r\n        return params;\r\n  }\r\n  */\n\n\n  render() {\n    const color_date = {\n      \"color\": \"#292b29\"\n    };\n    let {\n      Items,\n      isNull\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), isNull === true ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Kosong\") : /*#__PURE__*/React.createElement(ListPage, {\n      title: \"Tempat Wisata Terpopuler di Wilayah Bandung dan sekitarnya\",\n      list_item: Items.map((element, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: '/tempat-wisata/' + element.id,\n        className: \"link-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: 'http://localhost:8000/img_wisata/' + element.urlimage,\n        className: \"list-image-item\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }\n      }, element.nama_tempat_wisata), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 40\n        }\n      }, \"Harga\"), \" : \", element.harga), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 40\n        }\n      }, \"Lokasi\"), \" : \", element.lokasi)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"deskripsi\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: color_date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }\n      }, element.createdAt), /*#__PURE__*/React.createElement(Deskripsi, {\n        deskripsi: element.deskripsi,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 88\n        }\n      }))))),\n      activePage: this.state.activePage,\n      itemsCountPerPage: this.state.itemsCountPerPage,\n      totalItemsCount: this.state.totalItemsCount,\n      pageRangeDisplayed: this.state.pageRangeDisplayed,\n      onChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ListWisata;","map":{"version":3,"sources":["F:/Matkul/Kuliah Praktek/Client/src/tempat_wisata/List_Tempat_Wisata.js"],"names":["React","Component","Header","ListPage","Footer","Deskripsi","axios","ListWisata","constructor","props","fetchListWisata","get","state","activePage","then","response","data","current_page","per_page","total","setState","Items","itemsCountPerPage","totalItemsCount","isNull","catch","err","console","log","handlePageChange","pageNumber","res","description","itemCountPerPage","pageRangeDisplayed","Description","componentDidMount","window","scrollTo","render","color_date","map","element","index","id","urlimage","nama_tempat_wisata","harga","lokasi","createdAt","deskripsi"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport Header from \"../Components/Header\";\r\nimport ListPage from \"../Components/ListPage\";\r\nimport Footer from \"../Components/Footer\";\r\nimport Deskripsi from \"../Components/Deskripsi\";\r\nimport axios from \"axios\";\r\n\r\nclass ListWisata extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            Items : [],\r\n            isNull : false,\r\n            description : \"\",\r\n            activePage : 0,\r\n            itemCountPerPage : 0,\r\n            totalItemsCount : 0,\r\n            pageRangeDisplayed : 5,\r\n            Description : \"\"\r\n        };\r\n    }\r\n    \r\n    componentDidMount(){\r\n        window.scrollTo(0,0);\r\n        this.fetchListWisata();\r\n    }\r\n\r\n    /*\r\n    getRequestParams = (page,pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"pageSize\"] = pageSize;\r\n        }\r\n\r\n        return params;\r\n    }\r\n    */\r\n \r\n    fetchListWisata = () => {\r\n        /*\r\n        const {page, pageSize} = this.state;\r\n        const params = this.getRequestParams(page, pageSize);\r\n        */\r\n\r\n        axios.get('http://localhost:8000/wisata/pagination?page=' + this.state.activePage)\r\n        .then(response => {\r\n            const {data,current_page,per_page,total} = response.data;\r\n            this.setState({\r\n                Items : data,\r\n                activePage : current_page,\r\n                itemsCountPerPage : per_page,\r\n                totalItemsCount : total \r\n            });\r\n\r\n            if(data === null){\r\n                this.setState({ isNull : true });\r\n            }\r\n        })\r\n        .catch((err) =>{\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    /*\r\n    handlePageChange = (event,value) => {\r\n        this.setState(\r\n        {\r\n            page : value\r\n        },\r\n        () => {\r\n            this.fetchListWisata();\r\n        }\r\n    )\r\n    }\r\n    */\r\n   handlePageChange = (pageNumber) => {\r\n    axios.get('http://localhost:8000/wisata/pagination?page='+pageNumber)\r\n    .then(res => {\r\n        const {data,current_page} = res.data;\r\n        this.setState({\r\n            Items : data,\r\n            activePage : current_page\r\n        })\r\n    });\r\n    }\r\n\r\n    render(){\r\n        const color_date={\r\n            \"color\" : \"#292b29\"\r\n        };\r\n       let {Items,isNull} = this.state;\r\n\r\n        return(\r\n            <React.Fragment>    \r\n                <Header />\r\n                {isNull === true ?\r\n                <p>Kosong</p>:\r\n                <ListPage \r\n                    title=\"Tempat Wisata Terpopuler di Wilayah Bandung dan sekitarnya\"\r\n                    list_item={Items.map( (element,index) =>\r\n                        <li key={index}>\r\n                            <a href={'/tempat-wisata/' + element.id} className='link-item'>\r\n                                <img src={'http://localhost:8000/img_wisata/' + element.urlimage} className=\"list-image-item\" alt=\"\" />\r\n                                <div className='item'>\r\n                                    <h3>{element.nama_tempat_wisata}</h3>\r\n                                    <p><b>Harga</b> : {element.harga}</p>\r\n                                    <p><b>Lokasi</b> : {element.lokasi}</p>\r\n                                </div>\r\n                                <div className='deskripsi'>\r\n                                    <span style={color_date}>{element.createdAt}</span><Deskripsi deskripsi={element.deskripsi}/>\r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n                    )}\r\n                    activePage={this.state.activePage}\r\n                    itemsCountPerPage={this.state.itemsCountPerPage}\r\n                    totalItemsCount={this.state.totalItemsCount}\r\n                    pageRangeDisplayed={this.state.pageRangeDisplayed}\r\n                    onChange={this.handlePageChange}\r\n                />}\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListWisata;"]},"metadata":{},"sourceType":"module"}